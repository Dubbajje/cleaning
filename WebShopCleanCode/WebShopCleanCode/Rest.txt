 /*
}

    ShowProducts();
    
{
    
           
                  
                case 2:
                    if (currentCustomer != null)
                    {
                        Customermenu();
                    }
                    else
                    {
                        outputHandler.DisplayMessage("Nobody is logged in.");
                    }
                    break;
                case 3:
                    if (currentCustomer == null)
                    {
                        NoCustomerMenu();
                    }
                    else
                    {
                        option3 = "Login";
                        outputHandler.DisplayMessageWithArgument(currentCustomer.Username, " logged out." );
                        
                        navigation.currentChoice = 1;
                        currentCustomer = null;
                    }
                    break;
                default:
                    outputHandler.DisplayMessage("Not an option.");
                    break;
            }
        }
        else if (currentMenu.Equals("customer menu"))
        {
            Addfunds();
        }
        
            }
        }
        else if (currentMenu.Equals("wares menu"))
        {
            switch (currentChoice)
            {
                case 1:
                    Console.WriteLine();
                    
                    Console.WriteLine();
                    break;
                case 2:
                    if (currentCustomer != null)
                    {
                        currentMenu = "purchase menu";
                        info = "What would you like to purchase?";
                        currentChoice = 1;
                        amountOfOptions = products.Count;
                    }
                    else
                    {
                        outputHandler.DisplayMessage("You must be logged in to purchase wares.");
                        currentChoice = 1;
                    }
                    break;
                default:
                    outputHandler.DisplayMessage("Not an option.");
                    break;
            }
        }
        else if (currentMenu.Equals("login menu"))
        {
            string password = "";
            string firstName = "";
            string lastName = "";
            string email = "";
            int age = 0;
            string address = "";
            string phoneNumber = "";
            switch (currentChoice)
            {
                case 1:
                    Console.WriteLine("A keyboard appears.");
                    Console.WriteLine("Please input your username.");
                    username = Console.ReadLine();
                    Console.WriteLine();
                    break;
                case 2:
                    Console.WriteLine("A keyboard appears.");
                    Console.WriteLine("Please input your password.");
                    password = Console.ReadLine();
                    Console.WriteLine();
                    break;
                case 3:
                    if (username == null || password == null)
                    {
                        outputHandler.DisplayMessage("Incomplete data.");
                    }
                    else
                    {
                        bool found = false;
                        foreach (Customer customer in customers)
                        {
                            if (username.Equals(customer.Username) && customer.CheckPassword(password))
                            {
                                outputHandler.DisplayMessageWithArgument(customer.Username, " logged in." );
                                currentCustomer = customer;
                                found = true;
                                option1 = "See Wares";
                                option2 = "Customer Info";
                                if (currentCustomer == null)
                                {
                                    option3 = "Login";
                                }
                                else
                                {
                                    option3 = "Logout";
                                }
                                menu.DisplayMenu();
                                break;
                            }
                        }
                        if (found == false)
                        {
                            outputHandler.DisplayMessage("Invalid credentials.");
                        }
                    }
                    break;
                case 4:
                    string newUsername = SetValue("Please write your username.");
                    foreach (Customer customer in customers)
                    {
                        if (customer.Username.Equals(username))
                        {
                            outputHandler.DisplayMessage("Username already exists.");
                            break;
                        }
                    }
                    // Would have liked to be able to quit at any time in here.
                    choice = "";
                    bool next = false;
                    
                   
                    while (true)
                    {
                        choice = SetValue("Do you want a password? y/n");
                        if (choice.Equals("y"))
                        {
                            while (true)
                            {
                                password = SetValue("Please write your password.");
                                if (password.Equals(""))
                                {
                                    outputHandler.DisplayMessage("Please actually write something.");
                                    continue;
                                }
                                else
                                {
                                    next = true;
                                    break;
                                }
                            }
                        }
                        if (choice.Equals("n") || next)
                        {
                            next = false;
                            break;
                        }
                        outputHandler.DisplayMessage("y or n, please.");
                    }
                    while (true)
                    {
                        Console.WriteLine("Do you want a first name? y/n");
                        choice = Console.ReadLine();
                        if (choice.Equals("y"))
                        {
                            while (true)
                            {
                                firstName = SetValue("Please write your first name.");
                                if (firstName.Equals(""))
                                {
                                    outputHandler.DisplayMessage("Please actually write something.");
                                    continue;
                                }
                                else
                                {
                                    next = true;
                                    break;
                                }
                            }
                        }
                        if (choice.Equals("n") || next)
                        {
                            next = false;
                            break;
                        }
                        outputHandler.DisplayMessage("y or n, please.");
                    }
                    while (true)
                    {
                        choice = SetValue("Do you want a last name? y/n");
                        if (choice.Equals("y"))
                        {
                            while (true)
                            {
                                lastName = SetValue("Please write your last name.");
                                if (lastName.Equals(""))
                                {
                                    outputHandler.DisplayMessage("Please actually write something.");
                                    continue;
                                }
                                else
                                {
                                    next = true;
                                    break;
                                }
                            }
                        }
                        if (choice.Equals("n") || next)
                        {
                            next = false;
                            break;
                        }
                        outputHandler.DisplayMessage("y or n, please.");
                    }
                    while (true)
                    {
                        choice = SetValue("Do you want an email? y/n");
                        if (choice.Equals("y"))
                        {
                            while (true)
                            {

                                email = SetValue("Please write your email.");
                                if (email.Equals(""))
                                {
                                    outputHandler.DisplayMessage("Please actually write something.");
                                    continue;
                                }
                                else
                                {
                                    next = true;
                                    break;
                                }
                            }
                        }
                        if (choice.Equals("n") || next)
                        {
                            next = false;
                            break;
                        }
                        outputHandler.DisplayMessage("y or n, please.");
                    }
                    while (true)
                    {
                        Console.WriteLine("Do you want an age? y/n");
                        choice = Console.ReadLine();
                        if (choice.Equals("y"))
                        {
                            while (true)
                            {
                                string ageString = SetValue("Please write your age.");
                                try
                                {
                                    age = int.Parse(ageString);
                                }
                                catch (FormatException e)
                                {
                                    outputHandler.DisplayMessage("Please write a number.");
                                    continue;
                                }
                                next = true;
                                break;
                            }
                        }
                        if (choice.Equals("n") || next)
                        {
                            next = false;
                            break;
                        }
                        outputHandler.DisplayMessage("y or n, please.");
                    }
                    while (true)
                    {
                        Console.WriteLine("Do you want an address? y/n");
                        choice = Console.ReadLine();
                        if (choice.Equals("y"))
                        {
                            while (true)
                            {
                                address = SetValue("Please write your address.");
                                if (address.Equals(""))
                                {
                                    outputHandler.DisplayMessage("Please actually write something.");
                                    continue;
                                }
                                else
                                {
                                    next = true;
                                    break;
                                }
                            }
                        }
                        if (choice.Equals("n") || next)
                        {
                            next = false;
                            break;
                        }
                        outputHandler.DisplayMessage("y or n, please.");
                    }
                    while (true)
                    {
                        Console.WriteLine("Do you want a phone number? y/n");
                        choice = Console.ReadLine();
                        if (choice.Equals("y"))
                        {
                            while (true)
                            {
                                phoneNumber = SetValue("Please write your phone number.");
                                if (phoneNumber.Equals(""))
                                {
                                    outputHandler.DisplayMessage("Please actually write something.");
                                    continue;
                                }
                                else
                                {
                                    next = true;
                                    break;
                                }
                            }
                        }
                        if (choice.Equals("n") || next)
                        {
                            break;
                        }
                        outputHandler.DisplayMessage("y or n, please.");
                    }

                    CustomerBuilder customerBuilder = new CustomerBuilder();
                    Customer customer1 = customerBuilder.SetUsername(username).SetPassword(password)
                        .SetFirstname(firstName).SetEmail(email).SetAge(age).SetAddress(address).SetPhoneNumber(phoneNumber).Build();

                    //Customer newCustomer = new Customer(newUsername, password, firstName, lastName, email, age, address, phoneNumber);
                    customers.Add(customer1);
                    currentCustomer = customer1;
                    Console.WriteLine();
                    Console.WriteLine(customer1.Username + " successfully added and is now logged in.");
                    Console.WriteLine();
                    
                    menu.DisplayMenu();
                    break;
                default:
                    outputHandler.DisplayMessage("Not an option.");
                    break;
            }
        }
        else if (currentMenu.Equals("purchase menu"))
            break;
    case "back":
    case "b":
        if (currentMenu.Equals("main menu"))
        {
            outputHandler.DisplayMessage("You're already on the main menu.");
        }
        else if (currentMenu.Equals("purchase menu"))
        {
            purchaseMenu.DisplayMenu();

            menu.DisplayMenu();
        }
        
}
}
}

private string? SetValue(string message)
{
Console.WriteLine(message);
string value = Console.ReadLine();
return value;
}

private void Addfunds()
{
switch (currentChoice)
{
case 1:
    currentCustomer.PrintOrders();
    break;
case 2:
    currentCustomer.PrintInfo();
    break;
case 3:
    Console.WriteLine("How many funds would you like to add?");
    string amountString = Console.ReadLine();
    try
    {
        int amount = int.Parse(amountString);
        if (amount < 0)
        {
            outputHandler.DisplayMessage("Don't add negative amounts.");
        }
        else
        {
            currentCustomer.Funds += amount;
            outputHandler.DisplayMessageWithArgument(amountString, " added to your profile.");
        }
    }
    catch (FormatException e)
    {
        outputHandler.DisplayMessage("Please write a number next time.");
    }

    break;
default:
    outputHandler.DisplayMessage("Not an option.");
    break;
}
}

}
}
}
}

